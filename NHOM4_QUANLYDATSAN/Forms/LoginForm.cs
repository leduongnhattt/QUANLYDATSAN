using NHOM4_QUANLYDATSAN.Forms.Admin;
using NHOM4_QUANLYDATSAN.Forms.Owner;
using NHOM4_QUANLYDATSAN.Services;
using System;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace NHOM4_QUANLYDATSAN.Forms
{
    public partial class LoginForm : Form
    {
        private const string ADMIN = "Admin";
        private bool isPasswordVisible = false;
        private readonly string usernamePlaceholder = "T√™n ƒëƒÉng nh·∫≠p";
        private readonly string passwordPlaceholder = "M·∫≠t kh·∫©u";
        private bool isTextChangedRegistered = false;
        private AuthenticationService _authenticationService;


        public LoginForm()
        {
            InitializeComponent();
            _authenticationService = new AuthenticationService();
            // Cho ph√©p k√©o form b·∫±ng title bar custom
            panelTitleBar.MouseDown += PanelTitleBar_MouseDown;
            if (!isTextChangedRegistered)
            {
                txtPassword.TextChanged += TxtPassword_TextChanged;
                isTextChangedRegistered = true;
            }
        }

        // Placeholder cho Username
        private void txtUsername_GotFocus(object sender, EventArgs e)
        {
            if (txtUsername.Text == usernamePlaceholder)
            {
                txtUsername.Text = "";
                txtUsername.ForeColor = Color.Black;
            }
        }
        private void txtUsername_LostFocus(object sender, EventArgs e)
        {
            if (string.IsNullOrWhiteSpace(txtUsername.Text))
            {
                txtUsername.Text = usernamePlaceholder;
                txtUsername.ForeColor = Color.Gray;
            }
        }

        // Placeholder cho Password
        private void txtPassword_GotFocus(object sender, EventArgs e)
        {
            if (txtPassword.Text == passwordPlaceholder)
            {
                txtPassword.Text = "";
                txtPassword.ForeColor = Color.Black;
                txtPassword.UseSystemPasswordChar = !isPasswordVisible ? true : false;
            }
        }
        private void txtPassword_LostFocus(object sender, EventArgs e)
        {
            if (string.IsNullOrWhiteSpace(txtPassword.Text))
            {
                txtPassword.Text = passwordPlaceholder;
                txtPassword.ForeColor = Color.Gray;
                txtPassword.UseSystemPasswordChar = false;
            }
        }

        // Khi nh·∫≠p password, lu√¥n che k√Ω t·ª± n·∫øu kh√¥ng ph·∫£i placeholder v√† ch∆∞a b·∫•m hi·ªán
        private void TxtPassword_TextChanged(object sender, EventArgs e)
        {
            if (txtPassword.Text != passwordPlaceholder && !isPasswordVisible)
            {
                txtPassword.UseSystemPasswordChar = true;
            }
        }

        // ·∫®n/hi·ªán m·∫≠t kh·∫©u
        private void btnShowHidePassword_Click(object sender, EventArgs e)
        {
            if (txtPassword.Text == passwordPlaceholder) return;
            isPasswordVisible = !isPasswordVisible;
            txtPassword.UseSystemPasswordChar = !isPasswordVisible;
            btnShowHidePassword.Text = isPasswordVisible ? "üôà" : "üëÅ";
            txtPassword.Focus();
        }

        // X·ª≠ l√Ω n√∫t thu nh·ªè
        private void btnMinimize_Click(object sender, EventArgs e)
        {
            this.WindowState = FormWindowState.Minimized;
        }

        // X·ª≠ l√Ω n√∫t ph√≥ng to/kh√¥i ph·ª•c
        private void btnMaximize_Click(object sender, EventArgs e)
        {
            if (this.WindowState == FormWindowState.Normal)
                this.WindowState = FormWindowState.Maximized;
            else
                this.WindowState = FormWindowState.Normal;
        }

        // X·ª≠ l√Ω n√∫t ƒë√≥ng
        private void btnClose_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        [DllImport("user32.DLL", EntryPoint = "ReleaseCapture")]
        private extern static void ReleaseCapture();
        [DllImport("user32.DLL", EntryPoint = "SendMessage")]
        private extern static void SendMessage(System.IntPtr hWnd, int wMsg, int wParam, int lParam);
        private void PanelTitleBar_MouseDown(object sender, MouseEventArgs e)
        {
            ReleaseCapture();
            SendMessage(this.Handle, 0x112, 0xf012, 0);
        }


        private void btnLogin_Click(object sender, EventArgs e)
        {


            string username = txtUsername.Text.Trim();
            string password = txtPassword.Text;

            if (username == usernamePlaceholder || string.IsNullOrWhiteSpace(username))
            {
                MessageBox.Show("Vui l√≤ng nh·∫≠p t√™n ƒëƒÉng nh·∫≠p!", "L·ªói", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }

            if (password == passwordPlaceholder || string.IsNullOrWhiteSpace(password))
            {
                MessageBox.Show("Vui l√≤ng nh·∫≠p m·∫≠t kh·∫©u!", "L·ªói", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }

            if (!_authenticationService.ValidatePassword(password))
            {
                MessageBox.Show("M·∫≠t kh·∫©u ph·∫£i c√≥ √≠t nh·∫•t 6 k√Ω t·ª±, bao g·ªìm √≠t nh·∫•t m·ªôt k√Ω t·ª± ƒë·∫∑c bi·ªát v√† m·ªôt ch·ªØ s·ªë!", "L·ªói", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }

            string role;
            if (!_authenticationService.Authenticate(username, password, out role))
            {
                MessageBox.Show("T√™n ƒëƒÉng nh·∫≠p ho·∫∑c m·∫≠t kh·∫©u kh√¥ng ƒë√∫ng!", "L·ªói", MessageBoxButtons.OK, MessageBoxIcon.Error);
                ClearForm();
                return;
            }

            if (role == ADMIN)
            {
                AdminMainForm adminForm = new AdminMainForm();
                adminForm.Show();
                this.Hide();
                return;
            }
            OwnerMainForm ownerForm = new OwnerMainForm(username);
            ownerForm.Show();
            this.Hide();
        }
        private void ClearForm()
        {
            txtUsername.Text = usernamePlaceholder;
            txtUsername.ForeColor = Color.Gray;
            txtPassword.Text = passwordPlaceholder;
            txtPassword.ForeColor = Color.Gray;
        }
    }
}